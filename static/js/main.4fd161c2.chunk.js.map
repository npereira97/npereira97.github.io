{"version":3,"sources":["hooks/useTypewriter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useTypewriter","str","speed","clearText","useState","slice","interString","setInterString","charsWritten","setCharsWritten","movingForward","setMovingForward","useEffect","handle","setTimeout","length","n","clearTimeout","App","dynamicStmt","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fd161c2.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nfunction useTypewriter(str:string,speed=50,clearText=false) :string{\r\n    const [interString,setInterString] = useState(str.slice(0,1));\r\n\r\n    const [charsWritten,setCharsWritten] = useState(1);\r\n\r\n    const [movingForward,setMovingForward] = useState(true);\r\n\r\n    useEffect(() =>{\r\n\r\n        const handle = setTimeout(() =>{\r\n            setInterString(str.slice(0,charsWritten));\r\n            if (!(interString.length === str.length)){\r\n\r\n                if (movingForward){\r\n                    setCharsWritten(n => n+1);\r\n                }else{\r\n                    if (clearText){\r\n                        if (!(interString === '')){\r\n                            setCharsWritten(n => n === 0 ? 0 : n-1);\r\n                        }\r\n                    }\r\n                }\r\n            }else{\r\n\r\n                if (clearText){\r\n                    setMovingForward(false);\r\n                    setCharsWritten(n => n-1);\r\n                }\r\n                \r\n                \r\n            }    \r\n        },speed);\r\n\r\n        return () => clearTimeout(handle);\r\n        \r\n    },[charsWritten,movingForward])\r\n\r\n    return interString;\r\n}\r\n\r\nexport default useTypewriter;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './css/col.css';\nimport './css/main.css';\nimport './css/vars.css';\n\nimport FocusPane from './Components/FocusPane';\n\nimport ContactInfo from './Components/ContactInfo';\n\n\nimport useTypewriter from './hooks/useTypewriter';\n\nfunction App() {\n\n    const stmt = 'Recent graduate in Mathematics & Computer Science looking for my first fulltime software developer role. Interested in type theory, functional programming and Full Stack development.'\n    const dynamicStmt = useTypewriter(stmt,20);\n\n  return (\n\n    <div className='background'>\n\n        <div className=\"top-header\">\n                <div className=\"main-title\">Neil Pereira</div>\n\n                {/* <ContactInfo></ContactInfo> */}\n\n                <div className=\"statement\"> {dynamicStmt}  </div> \n\n\n        </div>\n        <div className='resume'>\n            \n            \n\n            <div className=\"right-bar\">\n                <div className=\"right-col\">\n                    <div className=\"section-title\">Projects</div>\n                    <hr></hr>\n\n\n                    <div>\n                        <div className=\"sub-title\">Golang Compiler</div> \n                        <ul>\n                            <li>Designed a compiler for the Go language as the final design project for a compiler design className </li>\n                            <li>Written in C, Bison & Flex</li>\n                            <li>Implemented the typecheck & target code generation phases </li>\n                        </ul>\n                    </div>\n\n\n                    <div>\n                        <div className=\"sub-title\">LearnOCaml Extension</div> \n                        <ul>\n                            <li>Coded an extension to an online learning platform used in an introductory functional programming course at McGill University\n                                that provides users immediate code performance feedback\n                            </li>\n                        </ul>\n                    </div>\n\n                    <div>\n                        <div className=\"sub-title\">Program Clustering Tool</div> \n                        <ul>\n                            <li>Created a novel code clustering technique using static & dynamic code analysis\n                            that correctly groups OCaml programs based on semantic similarities </li>\n                        </ul>\n                    </div>\n\n\n\n                    <div className=\"section-title\">Programming Languages & Software</div>\n                    <hr></hr>\n\n                    <div>\n                        <ul>\n                            <li><span className=\"dark\">Experienced:</span> C, Java, OCaml, Haskell, Python</li>\n                            <li><span className=\"dark\">Some knowledge:</span> SQL, C++, Bash, Docker, git, HTML, CSS, Javascript, React, MongoDB </li>\n                        </ul>\n                    </div>\n\n\n                    <div className=\"section-title\">Achievements</div>\n                    <hr></hr>\n\n                    <div>\n                        <ul>\n                            <li><span className=\"dark\">Research funding: </span>Rubin Gruber Science Undergraduate Research Award (2020)</li>\n                            <li><span className=\"dark\">Dean's Honor List 2018 </span> McGill </li>\n                        </ul>\n                    </div>\n\n                    <div className=\"section-title\">Languages</div>\n                    <hr></hr>\n                    \n\n                    \n\n                    <div>\n                        <ul>\n                            <li ><span className=\"dark\">English </span> Native </li>\n                            <li><span className=\"dark\">French </span> Intermediate </li>\n                        </ul>\n                    </div> \n\n                </div>\n            </div>\n\n            <div className='main-col'>\n                <div className=\"section-title\">Education</div>\n                <hr></hr>\n\n                <div>\n                    <div className=\"sub-title\"> Bachelor of Science: First Class Honors Mathematics & Computer Science <div className=\"duration\">2017-08 - 2021-05</div></div> \n                    <div className=\"location\">McGill University, Montreal</div>\n                    <div className=\"GPA\">GPA: 3.84/4.0</div>\n                    <ul>\n                        <li>CS courses in Compiler Design, Algorithms & Data\n                            Structures, Programming Languages &\n                            Paradigms, Distributed Systems and Type Theory\n                            </li>\n                        <li>\n                            Math courses in Advanced Functional Analysis, Vector Calculus,\n        Abstract Algebra, Probability & Statistics\n\n                        </li>\n                    </ul>\n                </div>\n\n                <div className=\"section-title\">Work Experience</div>\n                <hr></hr>\n\n\n                <div className=\"work-block \">\n                    <div className=\"sub-title\"> Summer Research Assistant <div className=\"duration\">SUMMER 2020</div></div> \n                    <div className=\"location\">McGill University, Montreal</div>\n                    <ul>\n                        <li>Investigated the utility of a static code analyzer (Resource Aware ML) in student feedback generation</li>\n                        <li>Integrated the analyzer into an online learning platform (LearnOCaml)</li>\n                        <li>Executed stress tests to gauge extension scalability</li>\n                        <li>Implemented in OCaml, Docker & JS</li>\n                    </ul>\n                </div>\n                \n\n                <div className=\"work-block \">\n                    <div className=\"sub-title\">Tomlinson Engagement Award Mentor (TEAM) COMP 302 <div className=\"duration\">FALL 2020, WINTER 2021 Semesters</div></div> \n                    <div className=\"location\">McGill University, Montreal</div>\n                    <ul>\n                        <li>Designed quiz & assignment questions</li>\n                        <li>Guided 5-10 students 2 hours every week</li>\n                        <li>Taught students key functional programming concepts</li>\n                        <li>Answered questions on course discussion boards</li>\n                    </ul>\n                </div>\n                \n\n                <div className=\"work-block \">\n                    <div className=\"sub-title\">CS Helpdesk Tutor<div className=\"duration\">FALL 2019, WINTER 2020, FALL 2020 Semesters</div></div> \n                    <div className=\"location\">McGill University, Montreal</div>\n                    <ul>\n                        <li>Tutored students in introductory CS concepts</li>\n                        <li>Helped 5-10 students 2 hours every week</li>\n                        <li>Worked with students in Java, Bash, Python, C, Ocaml, MIPS</li>\n                        <li>Debugged & tested student code</li>\n                    </ul>\n                </div>\n                \n\n            </div>\n        \n        </div>\n\n    </div>\n    \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}